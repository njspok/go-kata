// Code generated by mockery v2.13.1. DO NOT EDIT.

package mock_version

import mock "github.com/stretchr/testify/mock"

// MockAuditRep is an autogenerated mock type for the AuditRep type
type MockAuditRep struct {
	mock.Mock
}

type MockAuditRep_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAuditRep) EXPECT() *MockAuditRep_Expecter {
	return &MockAuditRep_Expecter{mock: &_m.Mock}
}

// Add provides a mock function with given fields: record
func (_m *MockAuditRep) Add(record *AuditRecord) error {
	ret := _m.Called(record)

	var r0 error
	if rf, ok := ret.Get(0).(func(*AuditRecord) error); ok {
		r0 = rf(record)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAuditRep_Add_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Add'
type MockAuditRep_Add_Call struct {
	*mock.Call
}

// Add is a helper method to define mock.On call
//   - record *AuditRecord
func (_e *MockAuditRep_Expecter) Add(record interface{}) *MockAuditRep_Add_Call {
	return &MockAuditRep_Add_Call{Call: _e.mock.On("Add", record)}
}

func (_c *MockAuditRep_Add_Call) Run(run func(record *AuditRecord)) *MockAuditRep_Add_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*AuditRecord))
	})
	return _c
}

func (_c *MockAuditRep_Add_Call) Return(_a0 error) *MockAuditRep_Add_Call {
	_c.Call.Return(_a0)
	return _c
}

// LastRecordByName provides a mock function with given fields: name
func (_m *MockAuditRep) LastRecordByName(name string) (*AuditRecord, error) {
	ret := _m.Called(name)

	var r0 *AuditRecord
	if rf, ok := ret.Get(0).(func(string) *AuditRecord); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*AuditRecord)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAuditRep_LastRecordByName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LastRecordByName'
type MockAuditRep_LastRecordByName_Call struct {
	*mock.Call
}

// LastRecordByName is a helper method to define mock.On call
//   - name string
func (_e *MockAuditRep_Expecter) LastRecordByName(name interface{}) *MockAuditRep_LastRecordByName_Call {
	return &MockAuditRep_LastRecordByName_Call{Call: _e.mock.On("LastRecordByName", name)}
}

func (_c *MockAuditRep_LastRecordByName_Call) Run(run func(name string)) *MockAuditRep_LastRecordByName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockAuditRep_LastRecordByName_Call) Return(_a0 *AuditRecord, _a1 error) *MockAuditRep_LastRecordByName_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewMockAuditRep interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockAuditRep creates a new instance of MockAuditRep. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAuditRep(t mockConstructorTestingTNewMockAuditRep) *MockAuditRep {
	mock := &MockAuditRep{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
